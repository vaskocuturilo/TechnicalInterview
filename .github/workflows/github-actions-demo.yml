name: CI/CD Pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  gradle:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      # Install the Java.
      - uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: adopt
          cache: 'gradle'

      # Setting up the MySQL.
      - uses: actions/checkout@v1
      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop

      - name: Set up MySQL 8.0
        uses: mirromutth/mysql-action@master
        with:
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: 'some_test' # Optional, default value is "test".
          mysql root password: ${{ DATABASE_PASSWORD }} # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: ${{ DATABASE_PASSWORD }} # Required if "mysql user" exists. The password for the "mysql user"

      # Setting up the Gradle.
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build
        run: ./gradlew build

      # Run the Unit, API, UI tests.
      - name: Setup and execute Gradle 'test' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test

